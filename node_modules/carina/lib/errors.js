"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var BaseError = (function (_super) {
    __extends(BaseError, _super);
    function BaseError(message) {
        _super.call(this, message);
        this.message = message;
    }
    return BaseError;
}(Error));
exports.BaseError = BaseError;
var CancelledError = (function (_super) {
    __extends(CancelledError, _super);
    function CancelledError() {
        _super.call(this, "Packet was cancelled or Carina was closed before a reply was received.");
    }
    return CancelledError;
}(BaseError));
exports.CancelledError = CancelledError;
var TimeoutError = (function (_super) {
    __extends(TimeoutError, _super);
    function TimeoutError() {
        _super.apply(this, arguments);
    }
    return TimeoutError;
}(BaseError));
exports.TimeoutError = TimeoutError;
var MessageParseError = (function (_super) {
    __extends(MessageParseError, _super);
    function MessageParseError() {
        _super.apply(this, arguments);
    }
    return MessageParseError;
}(BaseError));
exports.MessageParseError = MessageParseError;
var ConstellationError;
(function (ConstellationError) {
    var Base = (function (_super) {
        __extends(Base, _super);
        function Base(code, message) {
            _super.call(this, message);
            this.code = code;
        }
        return Base;
    }(BaseError));
    ConstellationError.Base = Base;
    var errors = {};
    function from(_a) {
        var code = _a.code, message = _a.message;
        if (errors[code]) {
            return new errors[code](message);
        }
        return new Base(code, message);
    }
    ConstellationError.from = from;
    var InvalidPayload = (function (_super) {
        __extends(InvalidPayload, _super);
        function InvalidPayload(message) {
            _super.call(this, 4000, message);
        }
        return InvalidPayload;
    }(Base));
    ConstellationError.InvalidPayload = InvalidPayload;
    errors[4000] = InvalidPayload;
    var PayloadDecompression = (function (_super) {
        __extends(PayloadDecompression, _super);
        function PayloadDecompression(message) {
            _super.call(this, 4001, message);
        }
        return PayloadDecompression;
    }(Base));
    ConstellationError.PayloadDecompression = PayloadDecompression;
    errors[4001] = PayloadDecompression;
    var UnknownPacketType = (function (_super) {
        __extends(UnknownPacketType, _super);
        function UnknownPacketType(message) {
            _super.call(this, 4002, message);
        }
        return UnknownPacketType;
    }(Base));
    ConstellationError.UnknownPacketType = UnknownPacketType;
    errors[4002] = UnknownPacketType;
    var UnknownMethodName = (function (_super) {
        __extends(UnknownMethodName, _super);
        function UnknownMethodName(message) {
            _super.call(this, 4003, message);
        }
        return UnknownMethodName;
    }(Base));
    ConstellationError.UnknownMethodName = UnknownMethodName;
    errors[4003] = UnknownMethodName;
    var InvalidMethodArguments = (function (_super) {
        __extends(InvalidMethodArguments, _super);
        function InvalidMethodArguments(message) {
            _super.call(this, 4004, message);
        }
        return InvalidMethodArguments;
    }(Base));
    ConstellationError.InvalidMethodArguments = InvalidMethodArguments;
    errors[4004] = InvalidMethodArguments;
    var SessionExpired = (function (_super) {
        __extends(SessionExpired, _super);
        function SessionExpired(message) {
            _super.call(this, 4005, message);
        }
        return SessionExpired;
    }(Base));
    ConstellationError.SessionExpired = SessionExpired;
    errors[4005] = SessionExpired;
    var LiveUnknownEvent = (function (_super) {
        __extends(LiveUnknownEvent, _super);
        function LiveUnknownEvent(message) {
            _super.call(this, 4106, message);
        }
        return LiveUnknownEvent;
    }(Base));
    ConstellationError.LiveUnknownEvent = LiveUnknownEvent;
    errors[4106] = LiveUnknownEvent;
    var LiveAccessDenied = (function (_super) {
        __extends(LiveAccessDenied, _super);
        function LiveAccessDenied(message) {
            _super.call(this, 4107, message);
        }
        return LiveAccessDenied;
    }(Base));
    ConstellationError.LiveAccessDenied = LiveAccessDenied;
    errors[4107] = LiveAccessDenied;
    var LiveAlreadySubscribed = (function (_super) {
        __extends(LiveAlreadySubscribed, _super);
        function LiveAlreadySubscribed(message) {
            _super.call(this, 4108, message);
        }
        return LiveAlreadySubscribed;
    }(Base));
    ConstellationError.LiveAlreadySubscribed = LiveAlreadySubscribed;
    errors[4108] = LiveAlreadySubscribed;
    var LiveNotSubscribed = (function (_super) {
        __extends(LiveNotSubscribed, _super);
        function LiveNotSubscribed(message) {
            _super.call(this, 4109, message);
        }
        return LiveNotSubscribed;
    }(Base));
    ConstellationError.LiveNotSubscribed = LiveNotSubscribed;
    errors[4109] = LiveNotSubscribed;
})(ConstellationError = exports.ConstellationError || (exports.ConstellationError = {}));
//# sourceMappingURL=errors.js.map