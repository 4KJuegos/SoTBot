/// <reference types="node" />
import { EventEmitter } from 'events';
/**
 * Returns a promise that's resolved when an event is emitted on the
 * EventEmitter.
 * @param  {EventEmitter} emitter
 * @param  {string}       event
 * @para   {number}       timeout used to prevent memory leaks
 * @return {Promise<any>}
 */
export declare function resolveOn(emitter: EventEmitter, event: string, timeout?: number): Promise<any>;
/**
 * Return a promise which is rejected with a TimeoutError after the
 * provided delay.
 * @param  {Number} delay
 * @return {Promise}
 */
export declare function timeout(message: string, delay: number): Promise<void>;
